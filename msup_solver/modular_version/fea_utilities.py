# fea_utilities.py

import numpy as np


def generate_apdl_ic(node_ids, vel_x, vel_y, vel_z):
    """
    Generates APDL initial condition commands from velocity data.

    Args:
        node_ids (np.array): Array of node numbers.
        vel_x (np.array): Array of velocities in the X direction.
        vel_y (np.array): Array of velocities in the Y direction.
        vel_z (np.array): Array of velocities in the Z direction.

    Returns:
        str: A string containing the APDL IC commands, ready to be saved.
    """
    apdl_commands = [
        "! APDL Initial Condition (Velocity) Commands",
        "! Generated by MSUP Smart Solver",
        "! Velocity Units: [mm/s]",
        "FINISH",
        "/SOLU",
        "! Applying Initial Conditions for Velocity"
    ]

    # Iterate through each node and create the IC command for each velocity component
    for i, node in enumerate(node_ids):
        # Ensure values are flattened if they are in a column vector
        vx = vel_x.flatten()[i]
        vy = vel_y.flatten()[i]
        vz = vel_z.flatten()[i]
        apdl_commands.append(f"IC,{int(node)},VELX,{vx:.6E}")
        apdl_commands.append(f"IC,{int(node)},VELY,{vy:.6E}")
        apdl_commands.append(f"IC,{int(node)},VELZ,{vz:.6E}")

    apdl_commands.append("! End of Initial Conditions")

    # Join all commands into a single string with newlines
    return "\n".join(apdl_commands)